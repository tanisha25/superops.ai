package com.springboot.shared.entity;

import java.sql.Timestamp;
import java.util.Date;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonManagedReference;

public class Seats {

	  private UUID id;
	  private int name;
	  private Screening screening;
	  private boolean alreadyBooked;
	  private Date createdOn;
	  private Date updatedOn;
	  private UUID createdBy;
	  private UUID updatedBy;
	  
		@Id
	    @GeneratedValue(strategy = GenerationType.AUTO)
		@Column(name = "screening_id", nullable = false)
		public UUID getId() {
			return id;
		}
		public void setId(UUID id) {
			this.id = id;
		}
		
		@Column(name = "name", nullable = false)
		public int getName() {
			return name;
		}
		public void setName(int name) {
			this.name = name;
		}
		
	    @ManyToOne
	    @JoinColumn(name = "screening_id")
	    @JsonManagedReference
	    
		
	    @ManyToOne
	    @JoinColumn(name = "theatre_id")
	    @JsonManagedReference
	    public Theatre getTheatre() {
			return theatre;
		}
		public Screening getScreening() {
			return screening;
		}
		public void setScreening(Screening screening) {
			this.screening = screening;
		}
		public void setTheatre(Theatre theatre) {
			this.theatre = theatre;
		}

		@Temporal(TemporalType.TIMESTAMP)
		@Column(name ="created_on", nullable= false ,length = 35)
		public Date getCreatedOn() {
			return createdOn;
		}
		
		public void setCreatedOn(Date createdOn) {
			this.createdOn = createdOn;
		}
		
		@Temporal(TemporalType.TIMESTAMP)
		@Column(name ="updated_on" ,length = 35)
		public Date getUpdatedOn() {
			return updatedOn;
		}
		public void setUpdatedOn(Date updatedOn) {
			this.updatedOn = updatedOn;
		}
		
		@Column(name ="created_by" ,length = 35)
		public UUID getCreatedBy() {
			return createdBy;
		}
		public void setCreatedBy(UUID createdBy) {
			this.createdBy = createdBy;
		}
		
		@Column(name ="updated_by" ,length = 35)
		public UUID getUpdatedBy() {
			return updatedBy;
		}
		public void setUpdatedBy(UUID updatedBy) {
			this.updatedBy = updatedBy;
		}
		@PrePersist
		public void prePersist()
		{
			Timestamp currentTimestamp = new Timestamp(System.currentTimeMillis());
			createdOn = currentTimestamp;
			updatedOn = currentTimestamp;
			
			if(id == null)
			{
				id = UUID.randomUUID();
			}
		}
		
		@PreUpdate
		public void preUpdate()
		{
			Timestamp currentTimestamp = new Timestamp(System.currentTimeMillis());
			updatedOn = currentTimestamp;
		}
		
	    
}
