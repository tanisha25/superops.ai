package com.springboot.shared.entity;

import java.sql.Timestamp;
import java.util.Date;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

public class Movie {
	private UUID id;
	private String name;
	private Date createdOn;
	private Date updatedOn;
	private UUID createdBy;
	private UUID updatedBy;
	
	@Id
    @GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "movie_id", nullable = false)
	public UUID getId() {
		return id;
	}
	public void setId(UUID id) {
		this.id = id;
	}
	
	@Column(name = "name", nullable = false)
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
   
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name ="created_on", nullable= false ,length = 35)
	public Date getCreatedOn() {
		return createdOn;
	}
	
	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name ="updated_on" ,length = 35)
	public Date getUpdatedOn() {
		return updatedOn;
	}
	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}
	
	@Column(name ="created_by" ,length = 35)
	public UUID getCreatedBy() {
		return createdBy;
	}
	public void setCreatedBy(UUID createdBy) {
		this.createdBy = createdBy;
	}
	
	@Column(name ="updated_by" ,length = 35)
	public UUID getUpdatedBy() {
		return updatedBy;
	}
	public void setUpdatedBy(UUID updatedBy) {
		this.updatedBy = updatedBy;
	}
	@PrePersist
	public void prePersist()
	{
		Timestamp currentTimestamp = new Timestamp(System.currentTimeMillis());
		createdOn = currentTimestamp;
		updatedOn = currentTimestamp;
		
		if(id == null)
		{
			id = UUID.randomUUID();
		}
	}
	
	@PreUpdate
	public void preUpdate()
	{
		Timestamp currentTimestamp = new Timestamp(System.currentTimeMillis());
		updatedOn = currentTimestamp;
	}
}
